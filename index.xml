<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Josh Armitage</title>
    <link>https://josharmi.github.io/</link>
    <description>Recent content on Josh Armitage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 03 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://josharmi.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Beginning The Quest For Serverless CQRS &amp; Event Sourcing</title>
      <link>https://josharmi.github.io/posts/serverless-event-sourcing/</link>
      <pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://josharmi.github.io/posts/serverless-event-sourcing/</guid>
      <description>The Quest This is the first in a series of blog posts to explore the potential for building serverless event sourced CQRS systems on AWS. First we&amp;rsquo;re going to lay out the whats and the whys of CQRS and event sourcing, some of the constraints we&amp;rsquo;re under and some initial spikes that look promising.
By the end of the quest we hope to have an example repository that you can fork and extend to start your own Serverless CQRS journey of discovery.</description>
    </item>
    
    <item>
      <title>Parameter Store Considered Harmful</title>
      <link>https://josharmi.github.io/posts/parameter-store/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://josharmi.github.io/posts/parameter-store/</guid>
      <description>Is Parameter Store an AWS Service GOTO? </description>
    </item>
    
    <item>
      <title>Three Tips For Lambda Layers</title>
      <link>https://josharmi.github.io/posts/lambda-layers/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://josharmi.github.io/posts/lambda-layers/</guid>
      <description>The Three Tips  Consider and manage your layer lifecycle Don&amp;rsquo;t prematurely optimise Consider different ways to decompose  What Is A Lambda Layer? Layers are a mechanism by which you can have common code available to an array of AWS lambda functions. They&amp;rsquo;re a simple enough thing to set up:
MyLayer: Type: &amp;quot;AWS::Lambda::LayerVersion&amp;quot; Properties: Description: Common code for reuse LayerName: CommonCodeLayer CompatibleRuntimes: - python3.7 Content: layer Then you can use it in a serverless function by:</description>
    </item>
    
    <item>
      <title>Conditional IAM Roles</title>
      <link>https://josharmi.github.io/posts/conditional-iam-roles/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://josharmi.github.io/posts/conditional-iam-roles/</guid>
      <description>Giving Consuming Teams A Choice Generally IAM roles are all-or-nothing deals, you either accept or reject the policies in their entirety. Here we look at leveraging CloudFormation conditions to build a configurable IAM role, that results in a more configurable and testable method for controlling role scope.
Where Might This Be Useful When controlling IAM roles within our sphere of control we follow the principle of least privilege, deploying exactly what is required to perform our tasks, which is relatively simple.</description>
    </item>
    
    <item>
      <title>DIY StackSets with Step Functions</title>
      <link>https://josharmi.github.io/posts/diy-stacksets/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://josharmi.github.io/posts/diy-stacksets/</guid>
      <description>Why Recreate StackSets Currently in order to leverage StackSets in any way you need fairly substantial permissions in the target account, as per the documentation, the minimum permissions to operate StackSets are:
{ &amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;, &amp;quot;Statement&amp;quot;: [ { &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;, &amp;quot;Action&amp;quot;: [ &amp;quot;cloudformation:*&amp;quot;, &amp;quot;s3:*&amp;quot;, &amp;quot;sns:*&amp;quot; ], &amp;quot;Resource&amp;quot;: &amp;quot;*&amp;quot; } ] } Having full S3, CloudFormation and SNS access cross account into production does feel like something we want to avoid. But StackSets give us a highly efficient and useful way to deploy stacks across large swathes of the estate, how much effort is it to build something that gives us some of the same functionality with much more restricted permissions.</description>
    </item>
    
    <item>
      <title>Scalable DNS with EventBridge</title>
      <link>https://josharmi.github.io/posts/scalable-dns-with-eventbridge/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://josharmi.github.io/posts/scalable-dns-with-eventbridge/</guid>
      <description>The Problem DNS, the source of all network problems, can be frustrating to implement at scale. Helpfully, AWS have released this guide on doing multi-account DNS. As with most things multi-account, automating the process is more involved than we would like, nevertheless we persevere and in this case show how AWS EventBridge can be the glue by which we stick together infrastructure at scale.
The Outcome By the end of this you should have:</description>
    </item>
    
    <item>
      <title>Scaling Security</title>
      <link>https://josharmi.github.io/posts/scaling-security/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://josharmi.github.io/posts/scaling-security/</guid>
      <description>The Scene You&amp;rsquo;re a new CISO at a rapidly scaling technology company with 50 engineers, looking to double engineering within 12 months. The company is trying to maintain its agility and rapid delivery, but you&amp;rsquo;re hitting a point where the security cowboy nature has presented too great a risk to be ignored any longer.
Tasked with imporving the security posture across the board, you&amp;rsquo;re worried that the developers and product owners don&amp;rsquo;t care about security.</description>
    </item>
    
  </channel>
</rss>