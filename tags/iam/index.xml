<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IAM on Josh Armitage</title>
    <link>https://josharmi.github.io/tags/iam/</link>
    <description>Recent content in IAM on Josh Armitage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 06 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://josharmi.github.io/tags/iam/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Conditional IAM Roles</title>
      <link>https://josharmi.github.io/posts/conditional-iam-roles/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://josharmi.github.io/posts/conditional-iam-roles/</guid>
      <description>Giving Consuming Teams A Choice Generally IAM roles are all-or-nothing deals, you either accept or reject the policies in their entirety. Here we look at leveraging CloudFormation conditions to build a configurable IAM role, that results in a more configurable and testable method for controlling role scope.
Where Might This Be Useful When controlling IAM roles within our sphere of control we follow the principle of least privilege, deploying exactly what is required to perform our tasks, which is relatively simple.</description>
    </item>
    
  </channel>
</rss>