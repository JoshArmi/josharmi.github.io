<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CloudFormation on Josh Armitage</title>
    <link>https://josharmi.github.io/tags/cloudformation/</link>
    <description>Recent content in CloudFormation on Josh Armitage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 28 Feb 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://josharmi.github.io/tags/cloudformation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DIY Stacksets for Terraform</title>
      <link>https://josharmi.github.io/posts/terraform-stacksets/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://josharmi.github.io/posts/terraform-stacksets/</guid>
      <description>What you&amp;rsquo;ll learn by the end By the end of this blog you will understand how you can build out stackset-esque functionality for your Terraform code and how this will make deploying common infrastructure across vast AWS estate significantly simpler.
Why we want Terraform stacksets Having been a heavy CloudFormation user for many years, and seeing the ecosystem of tooling that has built up around it, there was one piece I really wanted for Terraform, stacksets.</description>
    </item>
    
  </channel>
</rss>